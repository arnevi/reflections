When would you want to use a remote repository rather than keeping all your work
local?
	- 	When working with other developers on e.g. a project, sharing code using GitHub very usefull 
		All developers can then pull and push files/code using GitHub, to stay updated on prosject and changes
    

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?
-	Too have control with what you pust to the remote repository.
		If this was done automatically you could end up pushing code you
		dont want too the remote repository. You also got a lot of unneccesary 
		pushes if this was done automatically. 

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?
	Branching means you diverge from the main line of development and continue to do work without messing with that main line.
		If you e.g. want to experiment with code you may create a branch to work on.
	By cloning you get a 'local copy' of an GitHub repository. You clone/copy a GitHub repository to your local machine. 
		If you want to contribute to a GitHub repository, you can clone a GitHub repository to get a local copy.
	A fork can bee seen as a clone that GitHub makes on their machine 
		If you want too share your code in the GitHub repository with others, but dont want to allow changes, you can allow forking your repository on GitHub.


What is the benefit of having a copy of the last known state of the remote
stored locally?

    Fill in your answer here

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
