
What happens when you initialize a repository? Why do you need to do it?
	- You are creating a .git catalogue in the "current directory"
	- You have to do this to create/initialize a new empty repository to keep track of files and changes. 

How is the staging area different from the working directory and the repository? What value do you think it offers?
	- The working directory contais all your files
	- The staging area contains the files added there from your working directory. 
	  This is files you want to commit to the repository.
	- The repository contains all the files previously comitted from the staging area.

How can you use the staging area to make sure you have one commit per logical change?
	- By adding the files  containing the logical change to the staging area, and the do a commit 

What are some situations when branches would be helpful in keeping your history organized? How would branches help?	
	- I you want to experiment with functionality or code, and still want to have a clean/functional master branch
	- When there is a need for a different versjon of the program. E.g. another language, or a special version for some reason.
	  Keeping this in a seperate branch, you can still do changes and error-fixes on the master branch

How do the diagrams help you visualize the branch structure?
	- It is easier too see the whole picture when drawing it in a diagram.
	  Make it easier to get a good overwiev.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
	-	The result of merging two branches is ends up with one branch(the currently cheked out branch)
		containing differences/changes from both branches.
		Representing the different branches in a diagram, makes it easier to visialize the merge of the branches.
	
What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?	
	-	Pros: 
			Git keep track of changes and merge automatically where there is no conflict.
			Avoiding large manually comparing of files.
		Cons
			'Line based' comparing may not be ideal if code is changed and moved to a new location in file,
			or out of file.